{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 1)\
SELECT member.name FROM member, checkout_item, book WHERE checkout_item.book_id = book.id AND book.title = "The Hobbit" AND checkout_item.member_id = member.id;\
\
\
Anand Beck\
\
2) \
SELECT DISTINCT member.name FROM member, book, movie, checkout_item WHERE member.id NOT IN (SELECT DISTINCT checkout_item.member_id FROM checkout_item);\
\
\
Alok Carmack\
Alok Gupta\
Alok Jain\
Alok Knuth\
Anand Huang\
Anand Li\
Anand Schneider\
Anand Smith\
Billy Knuth\
Faris Huang\
Faris Wang\
Frank Beck\
Frank Listov\
Frank Singh\
Frank Wang\
Judy Li\
Judy Singh\
Julian Evans\
Julian Huang\
Julian Schneider\
Mauro Hunt\
Mauro Knuth\
Mauro Singh\
Mauro Smith\
Nandini Carmack\
Nandini Fowler\
Naval Hunt\
Raquel Listov\
Raquel Singh\
Schweta Jain\
Scott Huang\
Scott Jain\
Scott Knuth\
Sneha Wang\
Tanuj Fowler\
Tanuj Listov\
Tanuj Schneider\
\
3)\
\
SELECT DISTINCT movie.title \
FROM movie\
WHERE NOT EXISTS\
(\
SELECT NULL\
FROM checkout_item\
WHERE checkout_item.movie_id = movie.id\
);\
\
SELECT DISTINCT book.title\
FROM book\
WHERE NOT EXISTS\
(\
SELECT NULL\
FROM checkout_item\
WHERE checkout_item.book_id = book.id\
);\
\
Crouching Tiger, Hidden Dragon\
Lawrence of Arabia\
Office Space\
Thin Red Line\
1984\
Catcher in the Rye\
Domain Driven Design\
Fellowship of the Ring\
To Kill a Mockingbird\
Tom Sawyer\
\
4)\
\
INSERT INTO book (id, title)\
VALUES (11, "The Pragmatic Programmer");\
\
INSERT INTO member(id, name)\
VALUES (43, "Anna Rempe");\
\
INSERT INTO checkout_item (member_id, book_id)\
VALUES (43, 11);\
\
SELECT member.name \
FROM member, checkout_item, book \
WHERE checkout_item.book_id = book.id \
AND book.title = "The Pragmatic Programmer" \
AND checkout_item.member_id = member.id;\
\
5)\
\
SELECT member.name,  COUNT(checkout_item.member_id)\
FROM  member, checkout_item\
WHERE member.id = checkout_item.member_id \
GROUP BY checkout_item.member_id\
HAVING COUNT(checkout_item.member_id)>1;\
\
Anand Beck|3\
Frank Smith|3\
\
\
\
}